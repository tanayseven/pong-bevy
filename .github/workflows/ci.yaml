name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-and-build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev

    - name: Check formatting
      run: cargo fmt --all -- --check
      continue-on-error: true

    - name: Test
      run: cargo test

    - name: Build
      run: cargo build

  build-linux-and-web:

    runs-on: ubuntu-latest
    needs: test-and-build

    steps:

      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev

      - name: Build
        run: |
          cargo build --release
          cp target/release/bevy_pong bevy_pong_linux

      - name: Build Web
        run: |
          rustup target add wasm32-unknown-unknown
          cargo build --target wasm32-unknown-unknown --release
          cargo install wasm-bindgen-cli
          wasm-bindgen --no-typescript --target web --out-dir ./out/ --out-name "bevy_pong" ./target/wasm32-unknown-unknown/release/bevy_pong.wasm
          zip bevy_pong_wasm.zip  out/*
          
      - name: Upload linux build artifact
        id: upload_linux_artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-linux
          path: bevy_pong_linux

      - name: Upload web build artifact
        id: upload_web_artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-web-wasm
          path: bevy_pong_wasm.zip

  build-windows:

      runs-on: windows-latest
      needs: test-and-build

      steps:

        - uses: actions/checkout@v4

        - name: Build
          run: |
            cargo build --release
            cp target/release/bevy_pong.exe bevy_pong_windows.exe

        - name: Upload windows build artifact
          id: upload_windows_artifacts
          uses: actions/upload-artifact@v4
          with:
            name: build-windows
            path: bevy_pong_windows.exe

  build-macos-intel:

    runs-on: macos-13
    needs: test-and-build

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          cargo build --release
          cp target/release/bevy_pong bevy_pong_mac_intel

      - name: Upload macos-intel build artifact
        id: upload_macos_intel_artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-intel
          path: bevy_pong_mac_intel

  build-macos-apple-silicon:

    runs-on: macos-latest
    needs: test-and-build

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          cargo build --release
          cp target/release/bevy_pong bevy_pong_mac_apple_silicon

      - name: Upload macos-apple-silicon build artifact
        id: upload_macos_apple_silicon_artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-apple-silicon
          path: target/release/bevy_pong_mac_apple_silicon

  release:
    needs: [build-linux-and-web, build-windows, build-macos-intel, build-macos-apple-silicon]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Delete old release
        id: delete_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release delete latest || true

      - name: Download linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-linux
          path: ./build/
          merge-multiple: true

      - name: Download web-wasm artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-web-wasm
          path: ./build/
          merge-multiple: true

      - name: Download windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-windows
          path: ./build/
          merge-multiple: true

      - name: Download macos-intel artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-macos-intel
          path: ./build/
          merge-multiple: true

#      - name: Download macos-apple-silicon artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: build-macos-apple-silicon
#          path: ./build/
#          merge-multiple: true

      - name: Create new release
        id: create_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release create latest --title "Breakout - latest" --notes "Find the latest release of breakout that matches your platform"
          gh release upload latest ./build/bevy_pong_wasm.zip
          gh release upload latest ./build/bevy_pong_linux
          gh release upload latest ./build/bevy_pong_windows.exe
          gh release upload latest ./build/bevy_pong_mac_intel
          gh release upload latest ./build/bevy_pong_mac_apple_silicon
          gh release view latest
          gh release edit latest --draft=false

      - name: Download Butler to release to Itch.io
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler -V

      - name: Release to Itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
          ITCHIO_USER: tanayseven
          ITCHIO_GAME: breakout-ebitengine
        run: |
          ./butler login
